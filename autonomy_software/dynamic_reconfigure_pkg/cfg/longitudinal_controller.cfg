#!/usr/bin/env python
PACKAGE = "dynamic_reconfigure_pkg"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

longitudinal_control_mode_enum = gen.enum(
    [
        gen.const("ConstantPwmOutput", int_t, 0, "Send a constant PWM value"),
        gen.const("PID", int_t, 1, "Send a PWM value based on the PID controller output"),
    ],
    "An enum to store the longitudinal control modes",
)

gen.add("longitudinal_control_mode", int_t, 0, "The longitudinal control mode", 1, 0, 1, edit_method=longitudinal_control_mode_enum)
gen.add("constant_pwm_output", int_t, 0, "Constant PWM value for the longitudinal controller", 90, 0, 180)
gen.add("kp", double_t, 0, "the parameter for the proportional term of the PID controller", 0.5, 0, 100)
gen.add("ki", double_t, 0, "the parameter for the integral term of the PID controller", 0.1, 0, 100)
gen.add("kd", double_t, 0, "the parameter for the derivative term of the PID controller", 0, 0, 100)

gen.add("throttle_idle_autonomous_pwm", double_t, 1, "PWM value of the idle of the throttle", 90, 0, 180)
gen.add("throttle_max_autonomous_pwm", double_t, 1, "PWM value of the min of the throttle", 102, 0, 180)
gen.add("throttle_min_autonomous_pwm", double_t, 1, "PWM value of the min of the stethrottlering", 70, 0, 180)
gen.add("timeout_engage_msg_before_stop_secs", int_t, 1, "After how many seconds without message from car to deactivate", 1, 0, 10)


exit(gen.generate(PACKAGE, "dynamic_reconfigure_pkg", "longitudinal_controller"))
